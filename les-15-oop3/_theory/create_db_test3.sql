SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";

START TRANSACTION;
SET time_zone = "+03:00";


CREATE DATABASE IF NOT EXISTS `test3` 
DEFAULT CHARACTER SET utf8mb4 
COLLATE utf8mb4_general_ci;

USE `test3`;

DROP TABLE IF EXISTS `publication`;
CREATE TABLE IF NOT EXISTS `publication` (
  `id` int NOT NULL AUTO_INCREMENT,
  `title` varchar(255) COLLATE utf8mb4_general_ci NOT NULL,
  `date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `short_content` text COLLATE utf8mb4_general_ci NOT NULL,
  `contetnt` text COLLATE utf8mb4_general_ci NOT NULL,
  `author_name` varchar(255) COLLATE utf8mb4_general_ci NOT NULL,
  `preview` varchar(255) COLLATE utf8mb4_general_ci NOT NULL,
  `type` varchar(50) CHARACTER SET utf8mb4 
    COLLATE utf8mb4_general_ci DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8mb4 
    COLLATE=utf8mb4_general_ci;


INSERT INTO `publication` (`id`, `title`, `date`, 
`short_content`, 
`contetnt`, 
`author_name`, `preview`, `type`) VALUES
(1, 'PHP Дайджест № 222 (7 – 21 февраля 2022)', '2022-03-06 12:25:52', 
'Подборка свежих новостей, инструментов, видео и материалов из мира PHP.', 
'PHP 7.4.28, PHP 8.0.16, PHP 8.1.3\r\nОбновления актуальных веток PHP с фиксом уязвимости в php_filter_float(), а в 8.0 и 8.1 еще с пачкой других фиксов.\r\n\r\nДля PHP 7.3 обновления уже не выходят, даже если обнаружены проблемы безопасности. И хотя данной уязвимости PHP 7.3 не подвержена, тем не менее если вы все еще используете эту версию, то лучше запланировать обновление в ближайшее время.\r\n\r\nUbuntu 22.04 LTS выйдет с PHP 8.1\r\nОчередной релиз популярного Linux дистрибутива выйдет 21 апреля с предустановленным PHP версии 8.1.\r\nВ связи с этим предлагается поднять минимальную версию PHP в следующем релизе Symfony 6.1. А для Drupal 10 это уже сделали.\r\n\r\nPhpStorm 2022.1 EAP\r\nПродолжается программа раннего доступа первого мажорного релиза IDE в этом году. Сделали поддержку многострочных и вложенных аннотаций array shape! Можно использовать как в виде PHPDoc, так и в виде атрибута #[ArrayShape].\r\n\r\n[RFC] Redacting parameters in back traces\r\nНа голосовании предложение добавить аттрибут #[SensitiveParameter] для предотвращения отображения конфиденциальныx данных в отладочных логах.\r\nСкрытый текст\r\n\r\n[RFC] Undefined Variable Error Promotion\r\nАвтор ранее предложил в PHP 9 перевести многие оставшиеся предупреждения (WARNING) в полноценные исключения. Такое уже раньше делали в PHP 8.0.\r\n\r\nНу а начать решил с использования необъявленных переменных. Сейчас в этом случае бросается Warning и используется значение null.\r\nСкрытый текст\r\n\r\n[RFC] Random Extension 4.0\r\nСейчас функции типа rand() или mt_rand() будут генерировать одну и ту же последовательность для одинакового посевного (seed) значения, заданного с помощью srand(). Но из-за использования глобального состояния невозможно создать несколько генераторов с разными посевными значениями и использовать их одновременно.\r\n\r\nАвтор предлагает добавить объектный API для работы с генераторами псевдослучайных последовательностей, чтоб решить проблему глобального состояния.\r\nСкрытый текст\r\n\r\n[RFC] Allow null and false as stand-alone types\r\nПредлагается добавить возможность использовать null и false в декларациях типов.\r\nВо-первых, это недостающие куски для полноты системы типов в PHP — есть mixed, добавили never, объединения и пересечения, не хватает юнит-типа.\r\nВо-вторых, такие типы позволят покрыть некоторые граничные случаи и улучшить статический анализ.', 
'Роман Пронский', '/images/001.jpg', 'NewsPublication'),
(2, 'Не нужно стыдиться PHP', '2022-03-06 12:33:18', 
'Недавно я решил зайти на сайт cybersport.ru (проект VK GROUP), где хотел посмотреть результаты матчей наших мальчиков по Dote. Мой взгляд упал на статью \"Когда будет новый сайт\". Там помимо общей информации было пару фраз про PHP и Symfony, которые меня расстроили.', 'Хотя мотивации писать новую версию проекта все на том же PHP вполне понятна, адекватна и разумна, общий тон ответа содержит извинения за то, что проект пишется на PHP. Словно, вот где-то есть настоящие проекты, на настоящих языках программирования, которые пишут настоящие программисты, а тут пишется поделка на PHP, ибо ничего лучше команда не умеет и не может. Словно люди должны стыдиться, что они пишут на PHP, поэтому вот как-то все обходится фразами \"все довольно неплохо\". Об этом хочется и поговорить.\r\n\r\nПочему PHP стал \"плохим\" и \"постыдным\"\r\n\r\nВ силу того, что в свое время у PHP был достаточно низкий порог входа, и работа по натягиванию шаблонов на различные CMS системы не требовала каких-то глубоких знаний в Computer Science, в PHP пришло много людей, которые не знали, как писать хороший код.\r\n\r\nКачество кода таких ребят бросило тень на сам PHP, поэтому в IT-сообществе появились байки, что все PHP-программисты - плохие программисты, а PHP - плохой язык программирования. Вот точно такие же байки, как у всех Subaru проблема с 4 цилиндром, а весь Дальний Восток ездит на Toyota Mark II. Ничего общего с реальностью, но забавно.\r\n\r\nНа самом деле на PHP создавалось много успешных хайлоад-проектов, где работали талантливые программисты с высоким уровнем профессионализма.\r\n\r\nДавление рекламы и лидеров мнений\r\n\r\nПомимо того, что PHP имел не самое положительное мнение в IT-сообществе о себе, в инфо-пространство ворвались онлайн-школы, которые по какой-то рандомной причине выбрали python \"тем самым языком, на котором с тобой говорит интернет\". Это привело к заказам рекламы своих курсов у множества лидеров мнений. Многие из лидеров мнений, чтобы подчеркнуть превосходство курсов по Python, стали топить PHP - его главного конкурента.\r\n\r\nКак итог у людей, которые имели мало опыта в программировании, стало формироваться мнение, что PHP - это плохо, не модно, не клево. Да и вообще \"Насмехайтесь над ним, гоните его\". \r\n\r\nК сожалению, статья от редакции cybersport.ru говорит о том, что уже сами команды, которые работают на PHP, стали поддаваться пропаганде, и стали считать PHP плохим языком программирования и оправдываться за это. Это все печально.', 
'Сергей @hatman', '/images/002.jpg', 'NewsPublication'),
(3, 'Шпаргалка по SOLID-принципам с примерами на PHP', '2022-03-06 12:50:52', 
'Тема SOLID-принципов и в целом чистоты кода не раз поднималась на Хабре и, возможно, уже порядком изъезженная. Но тем не менее, не так давно мне приходилось проходить собеседования в одну интересную IT-компанию, где меня попросили рассказать о принципах SOLID с примерами и ситуациями, когда я не соблюл эти принципы и к чему это привело. И в тот момент я понял, что на каком-то подсознательном уровне я понимаю эти принципы и даже могут назвать их все, но привести лаконичные и понятные примеры для меня стало проблемой. Поэтому я и решил для себя самого и для сообщества обобщить информацию по SOLID-принципам для ещё лучшего её понимания. Статья должна быть полезной, для людей только знакомящихся с SOLID-принципами, также, как и для людей «съевших собаку» на SOLID-принципах.', 'Для тех, кто знаком с принципами и хочет только освежить память о них и их использовании, можно обратиться сразу к шпаргалке в конце статьи.\r\n\r\nЧто же такое SOLID-принципы? Если верить определению Wikipedia, это:\r\nаббревиатура пяти основных принципов дизайна классов в объектно-ориентированном проектировании — Single responsibility, Open-closed, Liskov substitution, Interface segregation и Dependency inversion.\r\n\r\n\r\nТаким образом, мы имеем 5 принципов, которые и рассмотрим ниже:\r\nПринцип единственной ответственности (Single responsibility)\r\nПринцип открытости/закрытости (Open-closed)\r\nПринцип подстановки Барбары Лисков (Liskov substitution)\r\nПринцип разделения интерфейса (Interface segregation)\r\nПринцип инверсии зависимостей (Dependency Invertion)\r\n\r\n\r\nПринцип единственной ответственности (Single responsibility)\r\n\r\nИтак, в качества примера возьмём довольно популярный и широкоиспользуемый пример — интернет-магазин с заказами, товарами и покупателями.\r\n\r\nПринцип единственной ответственности гласит — «На каждый объект должна быть возложена одна единственная обязанность». Т.е. другими словами — конкретный класс должен решать конкретную задачу — ни больше, ни меньше.', 
'Андрей Нестер', '/images/003.jpg', 'ArticlePublication'),
(4, '9 интересных новшеств в Laravel 9', '2022-03-06 12:53:49', 
'Я сразу как только вышла новость о релизе решил, что нужно посмотреть, пощупать и разобраться чего же изменилось. Да-да, на днях, а именно 8 февраля 2022 вышел официальный релиз Laravel 9, который включает довольно много новых улучшений. Для тех же из нас, кто не боится таких слов как alfa и beta девятая версия фреймворка давно не новость и уже в работе.', 'Теперь эта версия будет поддерживаться дольше (LTS), и разработчики фреймворка пришли к решению не выпускать новые версии каждые 6 месяцев, а делать это раз в год - в феврале. Судя из расписания, эта версия останется актуальной год, а обновления безопасности будут выпускаться вплоть до 2025 года.\r\nВерсия языка\r\nНовый Laravel работает только с php 8.0 и выше. Почему это так? Как мы увидим далее, разработчики воплотили в девятом фреймворке немало фишек последней версии языка, а значит, что использование php7 означало бы потерю именно этих нововведений.\r\nКоманда создала директорию, наполнила ее файлами нового проекта и установила зависимости, среди которых основным является laravel/framework версии v9.0.2. Как видим, релизную версию уже патчат.\r\nНовые помощники\r\nПредставлены две новые функции-помощника, которые, выполняя уже встроенный ранее функционал, делают это гораздо удобнее.\r\n\r\nДобавленная функция str создает объект класса Illuminate\\Support\\Stringable для переданной строки. Это позволяет применять к тексту все методы манипуляции строкой, доступные данному классу. Такая возможность существовала и в 8 версии фреймворка и реализовывалась через Str::of, но теперь получается немного лаконичнее.', 
'Жук Макс @zm_llill', '/images/004.jpg', 'ArticlePublication'),
(5, 'Как составить грамотное ТЗ на разработку сайта', '2022-03-06 13:07:01', 
'Суть закона подлости известна всем: если есть хоть малейшая вероятность того, что вас могут понять неправильно, то вас обязательно поймут неправильно. Это относится и к созданию сайтов. Например, заказчику нужен второй «Фейсбук», но он неправильно поставил задачу разработчику. В результате получился форум цветоводов.\r\n\r\nПрочитав эту статью, вы узнаете, что именно, как и зачем нужно писать в техническом задании. Поймете, чего нельзя делать, чтобы разработка ТЗ не стала потерей времени.', 'Что такое техническое задание\r\nТехническое задание — это документ с требованиями к сайту. Если ТЗ составлено четко и подробно, исполнителю будут понятны поставленные перед ними задачи.\r\n\r\nСледовательно, результат удовлетворит и заказчика, и исполнителя. Польза от технического задания очевидна:\r\n\r\n1. Заказчик:\r\n\r\nПонимает, за что он будет платить деньги и какой ему сделают сайт. Структура сайта видна сразу, и если что-то не устраивает, изменения можно внести еще до начала разработки.\r\n\r\nОценивает компетентность исполнителя. Грамотно составленное и понятное техзадание повышает доверие к разработчику.\r\n\r\nЗащищает себя от недобросовестности исполнителя. Готовый сайт можно проверить на соответствие техническому заданию. Есть неточности? Разработчик их исправит. При наличии официального договора его можно принудить сделать это через суд.\r\n\r\nУпрощает замену исполнителей. Бывает, что заказчик и исполнитель ссорятся и не могут продолжать совместную работу. В такой ситуации с созданием сайта возникают проблемы. Однако при наличии подробного техзадания их можно легко решить: заказчик просто передает ТЗ новой команде, и она сразу же включается в работу.\r\n\r\nУзнает стоимость разработки продукта. Понять, когда будет готов сложный сайт и узнать окончательную стоимость разработки сразу нельзя. Сначала нужно разобраться с функционалом веб-ресурса. Именно для этого нужно составить техническое задание.\r\n2. Исполнитель:\r\n\r\nПонимает желания заказчика. Для этого ему придется задать клиенту десятки вопросов, показать примеры, предложить решения. Потом записать все в соответствующий документ и согласовать с заказчиком. Он одобрил? Значит, исполнитель понял его правильно.\r\n\r\nЗастраховывается от внезапных «хотелок» заказчика. Случается, что в ходе создания сайта заказчик вдруг решает поменять задачу. Если разработчик согласовал и подписал ТЗ, он может быть спокоен: даже суд встанет на его сторону.\r\n\r\nПоказывает свою компетентность. Четко и понятно подготовленное ТЗ говорит о профессионализме разработчика.\r\n\r\nЗарабатывает деньги. Иногда составление технического задания оценивается как отдельная услуга.\r\n\r\nОблегчает и ускоряет работу. Благодаря качественному техническому заданию становится понятна структура сайта и функционал каждой страницы: можно переходить к написанию кода и разработке дизайна.', 
'INTEC @INTECweb', '/images/005.jpg', 'PhotoReportPublication');
COMMIT;
